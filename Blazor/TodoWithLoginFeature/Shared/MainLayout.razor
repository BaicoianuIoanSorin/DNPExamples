@using TodoWithLoginFeature.Authentication.Impl
@using System.Security.Cryptography
@using Microsoft.AspNetCore.Identity
@using TodoWithLoginFeature.Data
@using TodoWithLoginFeature.Pages
@inherits LayoutComponentBase

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject IUsersData UsersData
<AuthorizeView>
    <Authorized>
        <div class="page">
            <div class="sidebar">
                <NavMenu/>
            </div>
            <div class="main">
                <div class="top-row px-4">


                    <a>
                        <button @onclick="PerformLogout" class="btn1 align-content-sm-end">Log out</button>
                    </a>
                    <a>
                        <button @onclick="Profile" class="btn-info align-content-sm-end">Profile</button>
                    </a>


                </div>
                <div class="content px-4">
                    @Body
                </div>
            </div>
        </div>

    </Authorized>
    <NotAuthorized>
        <div class="content px-4">
            @Body
        </div>
    </NotAuthorized>
</AuthorizeView>

@code
{
    private string username;
    private string password;
    private string errorMessage = "";

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (user.Identity.IsAuthenticated)
        {
            username = user.Identity.Name;
        }
    }

    public async Task PerformLogout()
    {
        errorMessage = "";
        username = "";
        password = "";

        try
        {
            ((CustomeAuthenticationStateProvider) AuthenticationStateProvider).Logout();
            NavigationManager.NavigateTo("/");
        }
        catch (Exception e)
        {
        }
    }

    public async Task Profile()
    {
        try
        {
            NavigationManager.NavigateTo($"/Profile/{username}");
        }
        catch (Exception e)
        {
        }
    }
}